INPUT:
#include <stdio.h>

struct Process {
    int pid;
    int bt;
    int rt;
    int wt;
    int tat;
};

int main() {
    int n, tq, i, time = 0, remain;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    struct Process p[n];

    for (i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter burst time for process P%d: ", i + 1);
        scanf("%d", &p[i].bt);
        p[i].rt = p[i].bt;
        p[i].wt = 0;
    }

    printf("Enter time quantum: ");
    scanf("%d", &tq);

    remain = n;
    int flag = 0;

    while (remain != 0) {
        flag = 0;
        for (i = 0; i < n; i++) {
            if (p[i].rt > 0) {
                if (p[i].rt > tq) {
                    time += tq;
                    p[i].rt -= tq;
                } else {
                    time += p[i].rt;
                    p[i].wt = time - p[i].bt;
                    p[i].rt = 0;
                    remain--;
                }
            }
        }
    }

    float avg_wt = 0, avg_tat = 0;
    printf("\nProcess\tBT\tWT\tTAT");
    for (i = 0; i < n; i++) {
        p[i].tat = p[i].bt + p[i].wt;
        avg_wt += p[i].wt;
        avg_tat += p[i].tat;
        printf("\nP%d\t%d\t%d\t%d", p[i].pid, p[i].bt, p[i].wt, p[i].tat);
    }

    avg_wt /= n;
    avg_tat /= n;

    printf("\n\nAverage Waiting Time = %.2f", avg_wt);
    printf("\nAverage Turnaround Time = %.2f\n", avg_tat);

    return 0;
}
OUTPUT:
Enter number of processes: 4
Enter burst time for process P1: 6
Enter burst time for process P2: 8
Enter burst time for process P3: 7
Enter burst time for process P4: 3
Enter time quantum: 4

Process BT  WT  TAT
P1      6   9   15
P2      8   16  24
P3      7   17  24
P4      3   4   7

Average Waiting Time = 11.50
Average Turnaround Time = 17.50
